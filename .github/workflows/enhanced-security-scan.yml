name: Enhanced Security Scan Pipeline
# Based on Security Testing Checklist: Multi-Stage Pipeline Configuration

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  schedule:
    # Weekly full scan
    - cron: '0 2 * * 1'

env:
  NODE_VERSION: '20'
  PYTHON_VERSION: '3.11'

jobs:
  # Stage 1: Traditional SAST (Semgrep + CodeQL)
  stage1-traditional-sast:
    name: 'Stage 1: Traditional SAST'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for better analysis
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Semgrep Scan (Permissive)
        run: |
          pip install semgrep
          semgrep --config=auto --max-target-bytes=5MB \
            --json --output=semgrep-results.json \
            --severity=INFO \
            --verbose .
        continue-on-error: true
      
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript, typescript
          config: |
            name: Enhanced CodeQL Config
            queries:
              - uses: security-and-quality
              - uses: security-extended
      
      - name: Autobuild
        uses: github/codeql-action/autobuild@v3
      
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: '/language:javascript'
      
      - name: Upload Traditional SAST Results
        uses: actions/upload-artifact@v4
        with:
          name: traditional-sast-results
          path: |
            semgrep-results.json
            /home/runner/work/_temp/codeql_databases/
          retention-days: 30

  # Stage 2: AI-Enhanced Analysis
  stage2-ai-analysis:
    name: 'Stage 2: AI-Enhanced Analysis'
    runs-on: ubuntu-latest
    needs: stage1-traditional-sast
    if: always()
    permissions:
      contents: read
      security-events: write
    
    strategy:
      matrix:
        scan-iteration: [1, 2, 3]  # Multiple scans for non-determinism
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: Install Enhanced Scanner
        run: |
          npm ci
          npm run build
      
      - name: Download Traditional SAST Results
        uses: actions/download-artifact@v4
        with:
          name: traditional-sast-results
          path: ./sast-results/
      
      - name: Run Enhanced Security Scanner (Iteration ${{ matrix.scan-iteration }})
        run: |
          echo "Enhanced scanner placeholder - iteration ${{ matrix.scan-iteration }}"
          echo "Would run: npx enhanced-scanner scan --multi-scan"
          touch enhanced-scan-${{ matrix.scan-iteration }}.sarif
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        continue-on-error: true
      
      - name: Apply Custom Security Rules
        run: |
          echo "Custom rules placeholder - iteration ${{ matrix.scan-iteration }}"
          touch custom-rules-${{ matrix.scan-iteration }}.sarif
        continue-on-error: true
      
      - name: Upload AI Analysis Results
        uses: actions/upload-artifact@v4
        with:
          name: ai-analysis-results-${{ matrix.scan-iteration }}
          path: |
            enhanced-scan-${{ matrix.scan-iteration }}.sarif
            custom-rules-${{ matrix.scan-iteration }}.sarif
          retention-days: 30

  # Stage 3: Results Validation & Triage
  stage3-validation:
    name: 'Stage 3: Validation & Triage'
    runs-on: ubuntu-latest
    needs: [stage1-traditional-sast, stage2-ai-analysis]
    if: always()
    permissions:
      contents: read
      security-events: write
      pull-requests: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      
      - name: Download All Results
        uses: actions/download-artifact@v4
        with:
          path: ./all-results/
      
      - name: Merge SARIF Results
        run: |
          npm ci
          npm run build
          echo "SARIF merge placeholder"
          echo '{}' > merged-results.sarif
      
      - name: Validate Merged Results
        run: |
          echo "SARIF validation placeholder"
      
      - name: Check Critical Findings
        id: critical-check
        run: |
          CRITICAL_COUNT=0
          echo "critical-count=$CRITICAL_COUNT" >> $GITHUB_OUTPUT
          echo "âœ… No critical vulnerabilities found (placeholder)"
      
      - name: Generate Security Summary
        id: security-summary
        run: |
          SUMMARY=$(npx sarif-processor generate-summary merged-results.sarif)
          echo "summary<<EOF" >> $GITHUB_OUTPUT
          echo "$SUMMARY" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      
      - name: Upload Final SARIF to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: merged-results.sarif
          category: enhanced-security-scan
      
      - name: Comment PR with Security Summary
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const summary = `${{ steps.security-summary.outputs.summary }}`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: summary
            });
      
      - name: Upload Comprehensive Report
        uses: actions/upload-artifact@v4
        with:
          name: final-security-report
          path: |
            merged-results.sarif
            security-summary.json
            security-report.html
          retention-days: 90

  # Dependency & Supply Chain Security
  dependency-security:
    name: 'Dependency & Supply Chain Security'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      
      - name: Audit Dependencies
        run: |
          npm audit --audit-level=moderate --json > npm-audit.json || true
      
      - name: Check Package Integrity
        run: |
          # Verify package-lock.json integrity
          npm ci --dry-run
          
          # Check for suspicious packages
          npx enhanced-scanner check-packages \
            --typosquatting \
            --dependency-confusion \
            --malicious-scripts \
            --output package-security.json
      
      - name: CVE Reachability Analysis
        run: |
          # AI-enhanced CVE analysis
          npx enhanced-scanner analyze-cves \
            --reachability-analysis \
            --ai-validation \
            --output cve-analysis.json
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      
      - name: Upload Dependency Results
        uses: actions/upload-artifact@v4
        with:
          name: dependency-security-results
          path: |
            npm-audit.json
            package-security.json
            cve-analysis.json

  # Performance & Metrics
  performance-metrics:
    name: 'Performance & Metrics'
    runs-on: ubuntu-latest
    needs: [stage3-validation]
    if: always()
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Download All Results
        uses: actions/download-artifact@v4
        with:
          path: ./all-results/
      
      - name: Calculate Performance Metrics
        run: |
          npx enhanced-scanner metrics \
            --input ./all-results/ \
            --output performance-metrics.json \
            --dashboard performance-dashboard.html
      
      - name: Update Security Dashboard
        if: github.ref == 'refs/heads/main'
        run: |
          # Update security metrics dashboard
          npx enhanced-scanner update-dashboard \
            --metrics performance-metrics.json \
            --trends \
            --compliance-report
      
      - name: Upload Performance Results
        uses: actions/upload-artifact@v4
        with:
          name: performance-metrics
          path: |
            performance-metrics.json
            performance-dashboard.html

  # Notification & Reporting
  notification:
    name: 'Notification & Reporting'
    runs-on: ubuntu-latest
    needs: [stage3-validation, dependency-security]
    if: always()
    
    steps:
      - name: Notify Security Team (Critical Findings)
        if: needs.stage3-validation.outputs.critical-count > 0
        uses: 8398a7/action-slack@v3
        with:
          status: failure
          text: |
            ðŸš¨ Critical security vulnerabilities found in ${{ github.repository }}
            
            Branch: ${{ github.ref_name }}
            Commit: ${{ github.sha }}
            Critical Findings: ${{ needs.stage3-validation.outputs.critical-count }}
            
            Please review immediately: ${{ github.server_url }}/${{ github.repository }}/security
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_SECURITY_WEBHOOK }}
      
      - name: Weekly Security Digest
        if: github.event_name == 'schedule'
        run: |
          npx enhanced-scanner weekly-digest \
            --repository ${{ github.repository }} \
            --output weekly-digest.md
      
      - name: Email Security Report
        if: github.event_name == 'schedule'
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: Weekly Security Report - ${{ github.repository }}
          body: file://weekly-digest.md
          to: ${{ secrets.SECURITY_TEAM_EMAIL }}

# Workflow configuration for different branch types
# Based on Security Testing Checklist Section 9.2